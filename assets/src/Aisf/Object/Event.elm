-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Aisf.Object.Event exposing (competition, place, sport, year)

import Aisf.InputObject
import Aisf.Interface
import Aisf.Object
import Aisf.Scalar
import Aisf.ScalarCodecs
import Aisf.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


competition : SelectionSet String Aisf.Object.Event
competition =
    Object.selectionForField "String" "competition" [] Decode.string


place : SelectionSet String Aisf.Object.Event
place =
    Object.selectionForField "String" "place" [] Decode.string


sport : SelectionSet String Aisf.Object.Event
sport =
    Object.selectionForField "String" "sport" [] Decode.string


year : SelectionSet Int Aisf.Object.Event
year =
    Object.selectionForField "Int" "year" [] Decode.int

-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Aisf.Object.ChampionLite exposing (firstName, id, isMember, lastName, medals, proExperiences, profilePictureFilename, sport, yearsInFrenchTeam)

import Aisf.InputObject
import Aisf.Interface
import Aisf.Object
import Aisf.Scalar
import Aisf.ScalarCodecs
import Aisf.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


firstName : SelectionSet String Aisf.Object.ChampionLite
firstName =
    Object.selectionForField "String" "firstName" [] Decode.string


id : SelectionSet Aisf.ScalarCodecs.Id Aisf.Object.ChampionLite
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Aisf.ScalarCodecs.codecs |> Aisf.Scalar.unwrapCodecs |> .codecId |> .decoder)


isMember : SelectionSet Bool Aisf.Object.ChampionLite
isMember =
    Object.selectionForField "Bool" "isMember" [] Decode.bool


lastName : SelectionSet String Aisf.Object.ChampionLite
lastName =
    Object.selectionForField "String" "lastName" [] Decode.string


medals : SelectionSet decodesTo Aisf.Object.Medal -> SelectionSet (List decodesTo) Aisf.Object.ChampionLite
medals object_ =
    Object.selectionForCompositeField "medals" [] object_ (identity >> Decode.list)


proExperiences : SelectionSet decodesTo Aisf.Object.ProExperience -> SelectionSet (List decodesTo) Aisf.Object.ChampionLite
proExperiences object_ =
    Object.selectionForCompositeField "proExperiences" [] object_ (identity >> Decode.list)


profilePictureFilename : SelectionSet (Maybe String) Aisf.Object.ChampionLite
profilePictureFilename =
    Object.selectionForField "(Maybe String)" "profilePictureFilename" [] (Decode.string |> Decode.nullable)


sport : SelectionSet String Aisf.Object.ChampionLite
sport =
    Object.selectionForField "String" "sport" [] Decode.string


yearsInFrenchTeam : SelectionSet (Maybe (List Int)) Aisf.Object.ChampionLite
yearsInFrenchTeam =
    Object.selectionForField "(Maybe (List Int))" "yearsInFrenchTeam" [] (Decode.int |> Decode.list |> Decode.nullable)

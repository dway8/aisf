-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Aisf.Object.Record exposing (place, recordType, specialty, winners, year)

import Aisf.InputObject
import Aisf.Interface
import Aisf.Object
import Aisf.Scalar
import Aisf.ScalarCodecs
import Aisf.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


place : SelectionSet String Aisf.Object.Record
place =
    Object.selectionForField "String" "place" [] Decode.string


recordType : SelectionSet Int Aisf.Object.Record
recordType =
    Object.selectionForField "Int" "recordType" [] Decode.int


specialty : SelectionSet String Aisf.Object.Record
specialty =
    Object.selectionForField "String" "specialty" [] Decode.string


winners : SelectionSet decodesTo Aisf.Object.Winner -> SelectionSet (List decodesTo) Aisf.Object.Record
winners object_ =
    Object.selectionForCompositeField "winners" [] object_ (identity >> Decode.list)


year : SelectionSet Int Aisf.Object.Record
year =
    Object.selectionForField "Int" "year" [] Decode.int

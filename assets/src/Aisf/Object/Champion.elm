-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Aisf.Object.Champion exposing (email, firstName, id, lastName, medals, proExperiences, sport, yearsInFrenchTeam)

import Aisf.InputObject
import Aisf.Interface
import Aisf.Object
import Aisf.Scalar
import Aisf.ScalarCodecs
import Aisf.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


email : SelectionSet String Aisf.Object.Champion
email =
    Object.selectionForField "String" "email" [] Decode.string


firstName : SelectionSet String Aisf.Object.Champion
firstName =
    Object.selectionForField "String" "firstName" [] Decode.string


id : SelectionSet Aisf.ScalarCodecs.Id Aisf.Object.Champion
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Aisf.ScalarCodecs.codecs |> Aisf.Scalar.unwrapCodecs |> .codecId |> .decoder)


lastName : SelectionSet String Aisf.Object.Champion
lastName =
    Object.selectionForField "String" "lastName" [] Decode.string


medals : SelectionSet decodesTo Aisf.Object.Medal -> SelectionSet (List decodesTo) Aisf.Object.Champion
medals object_ =
    Object.selectionForCompositeField "medals" [] object_ (identity >> Decode.list)


proExperiences : SelectionSet decodesTo Aisf.Object.ProExperience -> SelectionSet (List decodesTo) Aisf.Object.Champion
proExperiences object_ =
    Object.selectionForCompositeField "proExperiences" [] object_ (identity >> Decode.list)


sport : SelectionSet String Aisf.Object.Champion
sport =
    Object.selectionForField "String" "sport" [] Decode.string


yearsInFrenchTeam : SelectionSet (Maybe (List Int)) Aisf.Object.Champion
yearsInFrenchTeam =
    Object.selectionForField "(Maybe (List Int))" "yearsInFrenchTeam" [] (Decode.int |> Decode.list |> Decode.nullable)
